<?php

/**
 * @file
 * Plugin definition and callbacks for a ctools:content_types plugin.
 *
 * @ingroup CToolsPlugin CToolsPluginContentTypes
 */

$plugin = array(
  'single' => TRUE,
  'title' => t('Travel Agency: Customers'),
  'description' => t('Show the customers'),
  'category' => t('Travel Agency'),
  'edit form' => 'travel_agency_customers_pane_custom_pane_edit_form',
  'render callback' => 'travel_agency_customers_pane_custom_pane_render',
  'admin info' => 'travel_agency_customers_pane_custom_pane_admin_info',
  'defaults' => array(
    'text' => 'Customers',
  ),
  'all contexts' => TRUE,
);

/**
 * An edit form for the pane's settings.
 */
function travel_agency_customers_pane_custom_pane_edit_form($form, &$form_state) {
  $conf = $form_state['conf'];

  $form['text'] = array(
    '#type' => 'textfield',
    '#title' => t('Customers text'),
    '#description' => t('Text to display, it may use substitution strings'),
    '#default_value' => $conf['text'],
  );

  return $form;
}

/**
 * Submit the customers_edit form.
 */
function travel_agency_customers_pane_custom_pane_edit_form_submit(&$form, &$form_state) {
  foreach (array_keys($form_state['plugin']['defaults']) as $key) {
    if (isset($form_state['values'][$key])) {
      $form_state['conf'][$key] = $form_state['values'][$key];
    }
  }
}

/**
 * Admin info callback.
 *
 * @param string $subtype
 *   Identifier of subtype.
 * @param array $conf
 *   Pane configuration. Array keys are depends on the _edit_form.
 *   - override_title
 *   - override_title_text.
 * @param array $context
 *   An array of context objects available for use. These may be placeholders.
 *
 * @return object
 *   Administrative title and description of the $subtype pane.
 *   The keys are:
 *   - title: string
 *   - content: string|array
 */
function travel_agency_customers_pane_custom_pane_admin_info($subtype, $conf, $context) {
  if (!empty($conf)) {
    $block = new stdClass;
    $block->title = $conf['override_title'] ? $conf['override_title_text'] : '';
    $block->content = $conf['text'];
    return $block;
  }
}

/**
 * Render callback.
 *
 * "CTools:Content types" plugin render callback for "Icf:Icf full search".
 *
 * @param string $subtype
 *   Subtype identifier.
 * @param array  $conf
 *   Configuration of the $subtype instance.
 * @param array  $args
 *   Documentation missing.
 * @param array  $context
 *   Documentation missing.
 *
 * @return object
 *   The content.
 */
function travel_agency_customers_pane_custom_pane_render($subtype, $conf, $args, $context) {
  
  $content = _ta_customers_pane_list() .
    theme('html_tag', array(
    'element' => array(
      '#tag' => 'em',
      '#attributes' => array(
        'class' => 'reference-comment',
        ),
      '#value' => 'This table generated by the ta_customers_pane.inc.',
    ),
  ));

  $block = new stdClass();

  $block->title = t('Customers');
  $block->content = $content;
 
  return $block;
   
}

/**
 * Join the "User" and the "field_data_field_telephone_number" tables.
 * 
 */
function _ta_customers_pane_list() {

  $header = array(
    array('data' => 'Name', 'field' => 'name', 'sort' => 'ASC'),
    array('data' => 'E-mail', 'field' => 'mail', 'sort' => 'ASC'),
    array('data' => 'Telephone number', 'field' =>
      'field_telephone_number_value', 'sort' => 'ASC'),
  );
  
  $query = db_select('users', 'u')
              ->extend('PagerDefault')
              ->extend('TableSort');
  
  $query->join('field_data_field_telephone_number', 'fdftn',
      'u.uid = fdftn.entity_id');
  
  $query->fields('u', array('name', 'mail'))
         ->fields('fdftn', array('field_telephone_number_value'))
         ->limit(7)
         ->orderByHeader($header)
         ->orderBy('name', 'DESC');
         //->condition('user_id', get_user_id())

  $results = $query->execute();

  $rows = array();
  foreach ($results as $row) {
    $rows[] = array($row->name,
                    $row->mail,
                    $row->field_telephone_number_value,
    );
  }

  $output = theme('table', array('header' => $header,
                                 'rows' => $rows ));
  $output .= theme('pager');

  return $output;

}
